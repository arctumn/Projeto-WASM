{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0","program":"/home/arctumn/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","block_modes","--edition=2018","/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=894999237d2e0b55","-C","extra-filename=-894999237d2e0b55","--out-dir","/home/arctumn/ano20202021/Projeto/teste/target/rls/debug/deps","-L","dependency=/home/arctumn/ano20202021/Projeto/teste/target/rls/debug/deps","--extern","block_padding=/home/arctumn/ano20202021/Projeto/teste/target/rls/debug/deps/libblock_padding-31625319aea42b0f.rmeta","--extern","cipher=/home/arctumn/ano20202021/Projeto/teste/target/rls/debug/deps/libcipher-d68f3f574cbd06fd.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/arctumn/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/arctumn/ano20202021/Projeto/teste/target/rls/debug/deps/libblock_modes-894999237d2e0b55.rmeta"},"prelude":{"crate_id":{"name":"block_modes","disambiguator":[17807531644637053718,16401128778887382288]},"crate_root":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src","external_crates":[{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[13741360846946026623,2672266499591153283]}},{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[4729845745352067521,14981637654352572000]}},{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[9324331421111590993,11905740212167270908]}},{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[11392341838745785002,13287300438441731562]}},{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[7603043973503281951,6245179856538753269]}},{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[8694337109875809164,2250367951223185901]}},{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10935849247287619708,10935329660555626336]}},{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5583458701817410803,1770096645244614441]}},{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[4926505318506753650,8786990194761766393]}},{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15262570485262297613,5690312430589388023]}},{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16900335184017598038,9051488994794742296]}},{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[528960645316233979,8037674519295179684]}},{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4483237274112351560,17959943558012528736]}},{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[384772052184402859,1578385820564656749]}},{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[12301751291607961788,16569514459755551136]}},{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[4223616801544016660,17489963460572122123]}},{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[3882963855561891520,1067502799155491607]}},{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","num":18,"id":{"name":"block_padding","disambiguator":[11407957932210477687,8547002301523018474]}},{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","num":19,"id":{"name":"cipher","disambiguator":[16079274693384875671,7124128582143748853]}},{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","num":20,"id":{"name":"generic_array","disambiguator":[9521423250337176932,3829213774533932103]}},{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","num":21,"id":{"name":"typenum","disambiguator":[11271716269504149159,15308233845609428533]}}],"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":0,"byte_end":3215,"line_start":1,"line_end":109,"column_start":1,"column_end":3}},"imports":[{"kind":"Use","ref_id":{"krate":18,"index":0},"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":3003,"byte_end":3016,"line_start":97,"line_end":97,"column_start":9,"column_end":22},"alias_span":null,"name":"block_padding","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":0},"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":3026,"byte_end":3032,"line_start":98,"line_end":98,"column_start":9,"column_end":15},"alias_span":null,"name":"cipher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":234},"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":3061,"byte_end":3064,"line_start":101,"line_end":101,"column_start":10,"column_end":13},"alias_span":null,"name":"Cbc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":244},"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":3075,"byte_end":3078,"line_start":102,"line_end":102,"column_start":10,"column_end":13},"alias_span":null,"name":"Cfb","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":254},"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":3090,"byte_end":3094,"line_start":103,"line_end":103,"column_start":11,"column_end":15},"alias_span":null,"name":"Cfb8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":264},"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":3105,"byte_end":3108,"line_start":104,"line_end":104,"column_start":10,"column_end":13},"alias_span":null,"name":"Ecb","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":220},"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":3123,"byte_end":3137,"line_start":105,"line_end":105,"column_start":14,"column_end":28},"alias_span":null,"name":"BlockModeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":221},"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":3123,"byte_end":3137,"line_start":105,"line_end":105,"column_start":14,"column_end":28},"alias_span":null,"name":"BlockModeError","value":"","parent":{"krate":0,"index":215}},{"kind":"Use","ref_id":{"krate":0,"index":227},"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":3139,"byte_end":3157,"line_start":105,"line_end":105,"column_start":30,"column_end":48},"alias_span":null,"name":"InvalidKeyIvLength","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":228},"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":3139,"byte_end":3157,"line_start":105,"line_end":105,"column_start":30,"column_end":48},"alias_span":null,"name":"InvalidKeyIvLength","value":"","parent":{"krate":0,"index":216}},{"kind":"Use","ref_id":{"krate":0,"index":273},"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":3169,"byte_end":3172,"line_start":106,"line_end":106,"column_start":10,"column_end":13},"alias_span":null,"name":"Ofb","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":283},"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":3184,"byte_end":3188,"line_start":107,"line_end":107,"column_start":11,"column_end":15},"alias_span":null,"name":"Pcbc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":33},"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":3202,"byte_end":3211,"line_start":108,"line_end":108,"column_start":13,"column_end":22},"alias_span":null,"name":"BlockMode","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":0,"byte_end":3215,"line_start":1,"line_end":109,"column_start":1,"column_end":3},"name":"","qualname":"::","value":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":16},{"krate":0,"index":50},{"krate":0,"index":70},{"krate":0,"index":96},{"krate":0,"index":121},{"krate":0,"index":137},{"krate":0,"index":167},{"krate":0,"index":185},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":457},{"krate":0,"index":216},{"krate":0,"index":459},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219}],"decl_id":null,"docs":" This crate contains generic implementation of [block cipher modes of\n operation][1].","sig":null,"attributes":[{"value":"/ This crate contains generic implementation of [block cipher modes of","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":0,"byte_end":72,"line_start":1,"line_end":1,"column_start":1,"column_end":73}},{"value":"/ operation][1].","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":73,"byte_end":91,"line_start":2,"line_end":2,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":92,"byte_end":95,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Note that some block modes (such as CTR, CFB, and OFB) transform block ciphers","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":96,"byte_end":178,"line_start":4,"line_end":4,"column_start":1,"column_end":83}},{"value":"/ into stream ciphers. Implementations in this crate require padding, so if you","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":179,"byte_end":260,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/ want use those modes as stream ciphers (i.e. without padding), then check out","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":261,"byte_end":342,"line_start":6,"line_end":6,"column_start":1,"column_end":82}},{"value":"/ crates in the [RustCrypto/stream-ciphers][2] repository.","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":343,"byte_end":403,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":404,"byte_end":407,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Usage example","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":408,"byte_end":427,"line_start":9,"line_end":9,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":428,"byte_end":435,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/ use aes::Aes128;","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":436,"byte_end":456,"line_start":11,"line_end":11,"column_start":1,"column_end":21}},{"value":"/ use block_modes::{BlockMode, Cbc};","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":457,"byte_end":495,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/ use block_modes::block_padding::Pkcs7;","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":496,"byte_end":538,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/ use hex_literal::hex;","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":539,"byte_end":564,"line_start":14,"line_end":14,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":565,"byte_end":568,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ // create an alias for convenience","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":569,"byte_end":607,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/ type Aes128Cbc = Cbc<Aes128, Pkcs7>;","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":608,"byte_end":648,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":649,"byte_end":652,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":653,"byte_end":670,"line_start":19,"line_end":19,"column_start":1,"column_end":18}},{"value":"/ let key = hex!(\"000102030405060708090a0b0c0d0e0f\");","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":671,"byte_end":726,"line_start":20,"line_end":20,"column_start":1,"column_end":56}},{"value":"/ let iv = hex!(\"f0f1f2f3f4f5f6f7f8f9fafbfcfdfeff\");","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":727,"byte_end":781,"line_start":21,"line_end":21,"column_start":1,"column_end":55}},{"value":"/ let plaintext = b\"Hello world!\";","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":782,"byte_end":818,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/ let cipher = Aes128Cbc::new_var(&key, &iv).unwrap();","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":819,"byte_end":875,"line_start":23,"line_end":23,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":876,"byte_end":879,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ // buffer must have enough space for message+padding","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":880,"byte_end":936,"line_start":25,"line_end":25,"column_start":1,"column_end":57}},{"value":"/ let mut buffer = [0u8; 32];","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":937,"byte_end":968,"line_start":26,"line_end":26,"column_start":1,"column_end":32}},{"value":"/ // copy message to the buffer","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":969,"byte_end":1002,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/ let pos = plaintext.len();","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":1003,"byte_end":1033,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ buffer[..pos].copy_from_slice(plaintext);","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":1034,"byte_end":1079,"line_start":29,"line_end":29,"column_start":1,"column_end":46}},{"value":"/ let ciphertext = cipher.encrypt(&mut buffer, pos).unwrap();","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":1080,"byte_end":1143,"line_start":30,"line_end":30,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":1144,"byte_end":1147,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(ciphertext, hex!(\"1b7a4c403124ae2fb52bedc534d82fa8\"));","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":1148,"byte_end":1217,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":1218,"byte_end":1221,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ // re-create cipher mode instance","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":1222,"byte_end":1259,"line_start":34,"line_end":34,"column_start":1,"column_end":38}},{"value":"/ let cipher = Aes128Cbc::new_var(&key, &iv).unwrap();","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":1260,"byte_end":1316,"line_start":35,"line_end":35,"column_start":1,"column_end":57}},{"value":"/ let mut buf = ciphertext.to_vec();","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":1317,"byte_end":1355,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ let decrypted_ciphertext = cipher.decrypt(&mut buf).unwrap();","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":1356,"byte_end":1421,"line_start":37,"line_end":37,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":1422,"byte_end":1425,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(decrypted_ciphertext, plaintext);","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":1426,"byte_end":1474,"line_start":39,"line_end":39,"column_start":1,"column_end":49}},{"value":"/ # }","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":1475,"byte_end":1482,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":1483,"byte_end":1490,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":1491,"byte_end":1494,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ With an enabled `alloc` feature (which is enabled by default) you can use","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":1495,"byte_end":1572,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ `encrypt_vec` and `descrypt_vec` methods:","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":1573,"byte_end":1618,"line_start":44,"line_end":44,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":1619,"byte_end":1626,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ # use aes::Aes128;","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":1627,"byte_end":1649,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"/ # use block_modes::{BlockMode, Cbc};","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":1650,"byte_end":1690,"line_start":47,"line_end":47,"column_start":1,"column_end":41}},{"value":"/ # use block_modes::block_padding::Pkcs7;","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":1691,"byte_end":1735,"line_start":48,"line_end":48,"column_start":1,"column_end":45}},{"value":"/ # use hex_literal::hex;","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":1736,"byte_end":1763,"line_start":49,"line_end":49,"column_start":1,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":1764,"byte_end":1769,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"/ # // create an alias for convenience","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":1770,"byte_end":1810,"line_start":51,"line_end":51,"column_start":1,"column_end":41}},{"value":"/ # type Aes128Cbc = Cbc<Aes128, Pkcs7>;","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":1811,"byte_end":1853,"line_start":52,"line_end":52,"column_start":1,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":1854,"byte_end":1859,"line_start":53,"line_end":53,"column_start":1,"column_end":6}},{"value":"/ # fn main() {","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":1860,"byte_end":1877,"line_start":54,"line_end":54,"column_start":1,"column_end":18}},{"value":"/ # let key = hex!(\"000102030405060708090a0b0c0d0e0f\");","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":1878,"byte_end":1935,"line_start":55,"line_end":55,"column_start":1,"column_end":58}},{"value":"/ # let iv = hex!(\"f0f1f2f3f4f5f6f7f8f9fafbfcfdfeff\");","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":1936,"byte_end":1992,"line_start":56,"line_end":56,"column_start":1,"column_end":57}},{"value":"/ # let plaintext = b\"Hello world!\";","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":1993,"byte_end":2031,"line_start":57,"line_end":57,"column_start":1,"column_end":39}},{"value":"/ let cipher = Aes128Cbc::new_var(&key, &iv).unwrap();","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":2032,"byte_end":2088,"line_start":58,"line_end":58,"column_start":1,"column_end":57}},{"value":"/ let ciphertext = cipher.encrypt_vec(plaintext);","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":2089,"byte_end":2140,"line_start":59,"line_end":59,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":2141,"byte_end":2144,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(ciphertext, hex!(\"1b7a4c403124ae2fb52bedc534d82fa8\"));","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":2145,"byte_end":2214,"line_start":61,"line_end":61,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":2215,"byte_end":2218,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ let cipher = Aes128Cbc::new_var(&key, &iv).unwrap();","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":2219,"byte_end":2275,"line_start":63,"line_end":63,"column_start":1,"column_end":57}},{"value":"/ let decrypted_ciphertext = cipher.decrypt_vec(&ciphertext).unwrap();","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":2276,"byte_end":2348,"line_start":64,"line_end":64,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":2349,"byte_end":2352,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(decrypted_ciphertext, plaintext);","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":2353,"byte_end":2401,"line_start":66,"line_end":66,"column_start":1,"column_end":49}},{"value":"/ # }","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":2402,"byte_end":2409,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":2410,"byte_end":2417,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":2418,"byte_end":2421,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [1]: https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":2422,"byte_end":2491,"line_start":70,"line_end":70,"column_start":1,"column_end":70}},{"value":"/ [2]: https://github.com/RustCrypto/stream-ciphers","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":2492,"byte_end":2545,"line_start":71,"line_end":71,"column_start":1,"column_end":54}},{"value":"no_std","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":2547,"byte_end":2557,"line_start":73,"line_end":73,"column_start":1,"column_end":11}},{"value":"deny(unsafe_code)","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":2749,"byte_end":2770,"line_start":78,"line_end":78,"column_start":1,"column_end":22}},{"value":"warn(missing_docs, rust_2018_idioms)","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/lib.rs","byte_start":2771,"byte_end":2811,"line_start":79,"line_end":79,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":220},"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/errors.rs","byte_start":3336,"byte_end":3350,"line_start":7,"line_end":7,"column_start":12,"column_end":26},"name":"BlockModeError","qualname":"::errors::BlockModeError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Block mode error.\n","sig":null,"attributes":[{"value":"/ Block mode error.","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/errors.rs","byte_start":3273,"byte_end":3294,"line_start":5,"line_end":5,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":227},"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/errors.rs","byte_start":3430,"byte_end":3448,"line_start":11,"line_end":11,"column_start":12,"column_end":30},"name":"InvalidKeyIvLength","qualname":"::errors::InvalidKeyIvLength","value":"","parent":null,"children":[],"decl_id":null,"docs":" Invalid key or IV length error.\n","sig":null,"attributes":[{"value":"/ Invalid key or IV length error.","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/errors.rs","byte_start":3353,"byte_end":3388,"line_start":9,"line_end":9,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":33},"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","byte_start":4493,"byte_end":4502,"line_start":13,"line_end":13,"column_start":11,"column_end":20},"name":"BlockMode","qualname":"::traits::BlockMode","value":"BlockMode<C, P>: Sized","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":48}],"decl_id":null,"docs":" Trait for a block cipher mode of operation that is used to apply a block cipher\n operation to input data to transform it into a variable-length output message.\n","sig":null,"attributes":[{"value":"/ Trait for a block cipher mode of operation that is used to apply a block cipher","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","byte_start":4316,"byte_end":4399,"line_start":11,"line_end":11,"column_start":1,"column_end":84}},{"value":"/ operation to input data to transform it into a variable-length output message.","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","byte_start":4400,"byte_end":4482,"line_start":12,"line_end":12,"column_start":1,"column_end":83}}]},{"kind":"Type","id":{"krate":0,"index":36},"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","byte_start":4622,"byte_end":4628,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"name":"IvSize","qualname":"::traits::BlockMode::IvSize","value":"type IvSize: ArrayLength<u8>;","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Initialization Vector size.\n","sig":null,"attributes":[{"value":"/ Initialization Vector size.","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","byte_start":4581,"byte_end":4612,"line_start":18,"line_end":18,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","byte_start":4734,"byte_end":4737,"line_start":22,"line_end":22,"column_start":8,"column_end":11},"name":"new","qualname":"::traits::BlockMode::new","value":"pub fn new(C, &GenericArray<u8, Self::IvSize>) -> Self","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Create a new block mode instance from initialized block cipher and IV.\n","sig":null,"attributes":[{"value":"/ Create a new block mode instance from initialized block cipher and IV.","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","byte_start":4652,"byte_end":4726,"line_start":21,"line_end":21,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","byte_start":4873,"byte_end":4880,"line_start":25,"line_end":25,"column_start":8,"column_end":15},"name":"new_fix","qualname":"::traits::BlockMode::new_fix","value":"pub fn new_fix(&Key<C>, &GenericArray<u8, Self::IvSize>) -> Self","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Create a new block mode instance from fixed sized key and IV.\n","sig":null,"attributes":[{"value":"/ Create a new block mode instance from fixed sized key and IV.","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","byte_start":4800,"byte_end":4865,"line_start":24,"line_end":24,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","byte_start":5134,"byte_end":5141,"line_start":32,"line_end":32,"column_start":8,"column_end":15},"name":"new_var","qualname":"::traits::BlockMode::new_var","value":"pub fn new_var(&[u8], &[u8]) -> Result<Self, InvalidKeyIvLength>","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Create a new block mode instance from variable size key and IV.","sig":null,"attributes":[{"value":"/ Create a new block mode instance from variable size key and IV.","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","byte_start":4988,"byte_end":5055,"line_start":29,"line_end":29,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","byte_start":5060,"byte_end":5063,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Returns an error if key or IV have unsupported length.","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","byte_start":5068,"byte_end":5126,"line_start":31,"line_end":31,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","byte_start":5502,"byte_end":5516,"line_start":42,"line_end":42,"column_start":8,"column_end":22},"name":"encrypt_blocks","qualname":"::traits::BlockMode::encrypt_blocks","value":"pub fn encrypt_blocks(&mut Self, &mut [Block<C>])","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Encrypt blocks of data\n","sig":null,"attributes":[{"value":"/ Encrypt blocks of data","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","byte_start":5468,"byte_end":5494,"line_start":41,"line_end":41,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","byte_start":5593,"byte_end":5607,"line_start":45,"line_end":45,"column_start":8,"column_end":22},"name":"decrypt_blocks","qualname":"::traits::BlockMode::decrypt_blocks","value":"pub fn decrypt_blocks(&mut Self, &mut [Block<C>])","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Decrypt blocks of data\n","sig":null,"attributes":[{"value":"/ Decrypt blocks of data","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","byte_start":5559,"byte_end":5585,"line_start":44,"line_end":44,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","byte_start":5915,"byte_end":5922,"line_start":52,"line_end":52,"column_start":8,"column_end":15},"name":"encrypt","qualname":"::traits::BlockMode::encrypt","value":"pub fn encrypt(Self, &mut [u8], usize) -> Result<&[u8], BlockModeError>","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Encrypt message in-place.","sig":null,"attributes":[{"value":"/ Encrypt message in-place.","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","byte_start":5650,"byte_end":5679,"line_start":47,"line_end":47,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","byte_start":5684,"byte_end":5687,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ `&buffer[..pos]` is used as a message and `&buffer[pos..]` as a reserved","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","byte_start":5692,"byte_end":5768,"line_start":49,"line_end":49,"column_start":5,"column_end":81}},{"value":"/ space for padding. The padding space should be big enough for padding,","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","byte_start":5773,"byte_end":5847,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ otherwise method will return `Err(BlockModeError)`.","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","byte_start":5852,"byte_end":5907,"line_start":51,"line_end":51,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","byte_start":6366,"byte_end":6373,"line_start":63,"line_end":63,"column_start":8,"column_end":15},"name":"decrypt","qualname":"::traits::BlockMode::decrypt","value":"pub fn decrypt(Self, &mut [u8]) -> Result<&[u8], BlockModeError>","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Decrypt message in-place.","sig":null,"attributes":[{"value":"/ Decrypt message in-place.","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","byte_start":6186,"byte_end":6215,"line_start":59,"line_end":59,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","byte_start":6220,"byte_end":6223,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Returns an error if `buffer` length is not multiple of block size and","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","byte_start":6228,"byte_end":6301,"line_start":61,"line_end":61,"column_start":5,"column_end":78}},{"value":"/ if after decoding message has malformed padding.","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","byte_start":6306,"byte_end":6358,"line_start":62,"line_end":62,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","byte_start":6764,"byte_end":6775,"line_start":74,"line_end":74,"column_start":8,"column_end":19},"name":"encrypt_vec","qualname":"::traits::BlockMode::encrypt_vec","value":"pub fn encrypt_vec(Self, &[u8]) -> Vec<u8>","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Encrypt message and store result in vector.\n","sig":null,"attributes":[{"value":"/ Encrypt message and store result in vector.","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","byte_start":6679,"byte_end":6726,"line_start":72,"line_end":72,"column_start":5,"column_end":52}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","byte_start":6731,"byte_end":6756,"line_start":73,"line_end":73,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","byte_start":7452,"byte_end":7463,"line_start":94,"line_end":94,"column_start":8,"column_end":19},"name":"decrypt_vec","qualname":"::traits::BlockMode::decrypt_vec","value":"pub fn decrypt_vec(Self, &[u8]) -> Result<Vec<u8>, BlockModeError>","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Encrypt message and store result in vector.\n","sig":null,"attributes":[{"value":"/ Encrypt message and store result in vector.","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","byte_start":7367,"byte_end":7414,"line_start":92,"line_end":92,"column_start":5,"column_end":52}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","byte_start":7419,"byte_end":7444,"line_start":93,"line_end":93,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":234},"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/cbc.rs","byte_start":9622,"byte_end":9625,"line_start":13,"line_end":13,"column_start":12,"column_end":15},"name":"Cbc","qualname":"::cbc::Cbc","value":"Cbc {  }","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239}],"decl_id":null,"docs":" [Cipher Block Chaining][1] (CBC) block cipher mode instance.","sig":null,"attributes":[{"value":"/ [Cipher Block Chaining][1] (CBC) block cipher mode instance.","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/cbc.rs","byte_start":9451,"byte_end":9515,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/cbc.rs","byte_start":9516,"byte_end":9519,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [1]: https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#CBC","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/cbc.rs","byte_start":9520,"byte_end":9593,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":244},"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/cfb.rs","byte_start":12130,"byte_end":12133,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"Cfb","qualname":"::cfb::Cfb","value":"Cfb {  }","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249}],"decl_id":null,"docs":" [Cipher feedback][1] (CFB) block mode instance with a full block feedback.","sig":null,"attributes":[{"value":"/ [Cipher feedback][1] (CFB) block mode instance with a full block feedback.","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/cfb.rs","byte_start":11927,"byte_end":12005,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/cfb.rs","byte_start":12006,"byte_end":12009,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [1]: https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_feedback_(CFB)","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/cfb.rs","byte_start":12010,"byte_end":12101,"line_start":12,"line_end":12,"column_start":1,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":254},"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/cfb8.rs","byte_start":15247,"byte_end":15251,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Cfb8","qualname":"::cfb8::Cfb8","value":"Cfb8 {  }","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259}],"decl_id":null,"docs":" [Cipher feedback][1] (CFB) block mode instance with a full block feedback.","sig":null,"attributes":[{"value":"/ [Cipher feedback][1] (CFB) block mode instance with a full block feedback.","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/cfb8.rs","byte_start":15044,"byte_end":15122,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/cfb8.rs","byte_start":15123,"byte_end":15126,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [1]: https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_feedback_(CFB)","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/cfb8.rs","byte_start":15127,"byte_end":15218,"line_start":10,"line_end":10,"column_start":1,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":264},"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/ecb.rs","byte_start":17261,"byte_end":17264,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"Ecb","qualname":"::ecb::Ecb","value":"Ecb {  }","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":268}],"decl_id":null,"docs":" [Electronic Codebook][1] (ECB) block cipher mode instance.","sig":null,"attributes":[{"value":"/ [Electronic Codebook][1] (ECB) block cipher mode instance.","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/ecb.rs","byte_start":16972,"byte_end":17034,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/ecb.rs","byte_start":17035,"byte_end":17038,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Note that `new` method ignores IV, so during initialization you can","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/ecb.rs","byte_start":17039,"byte_end":17110,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ just pass `Default::default()` instead.","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/ecb.rs","byte_start":17111,"byte_end":17154,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/ecb.rs","byte_start":17155,"byte_end":17158,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [1]: https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#ECB","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/ecb.rs","byte_start":17159,"byte_end":17232,"line_start":15,"line_end":15,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":273},"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/ofb.rs","byte_start":19365,"byte_end":19368,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"Ofb","qualname":"::ofb::Ofb","value":"Ofb {  }","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278}],"decl_id":null,"docs":" [Output feedback][1] (OFB) block mode instance with a full block feedback.","sig":null,"attributes":[{"value":"/ [Output feedback][1] (OFB) block mode instance with a full block feedback.","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/ofb.rs","byte_start":19162,"byte_end":19240,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/ofb.rs","byte_start":19241,"byte_end":19244,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [1]: https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_feedback_(CFB)","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/ofb.rs","byte_start":19245,"byte_end":19336,"line_start":10,"line_end":10,"column_start":1,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":283},"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/pcbc.rs","byte_start":20491,"byte_end":20495,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Pcbc","qualname":"::pcbc::Pcbc","value":"Pcbc {  }","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288}],"decl_id":null,"docs":" [Propagating Cipher Block Chaining][1] (PCBC) mode instance.","sig":null,"attributes":[{"value":"/ [Propagating Cipher Block Chaining][1] (PCBC) mode instance.","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/pcbc.rs","byte_start":20319,"byte_end":20383,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/pcbc.rs","byte_start":20384,"byte_end":20387,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [1]: https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#PCBC","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/pcbc.rs","byte_start":20388,"byte_end":20462,"line_start":10,"line_end":10,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/pcbc.rs","byte_start":20743,"byte_end":20746,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"new","qualname":"<Pcbc<C, P>>::new","value":"pub fn new(C, &Block<C>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initialize PCBC\n","sig":null,"attributes":[{"value":"/ Initialize PCBC","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/pcbc.rs","byte_start":20712,"byte_end":20731,"line_start":23,"line_end":23,"column_start":5,"column_end":24}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/errors.rs","byte_start":3473,"byte_end":3487,"line_start":13,"line_end":13,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":10}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/errors.rs","byte_start":3657,"byte_end":3671,"line_start":20,"line_end":20,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":12}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/errors.rs","byte_start":3768,"byte_end":3786,"line_start":26,"line_end":26,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/errors.rs","byte_start":3960,"byte_end":3978,"line_start":33,"line_end":33,"column_start":23,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/cbc.rs","byte_start":9766,"byte_end":9769,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/cbc.rs","byte_start":10224,"byte_end":10227,"line_start":37,"line_end":37,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/cfb.rs","byte_start":12291,"byte_end":12294,"line_start":20,"line_end":20,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/cfb8.rs","byte_start":15412,"byte_end":15416,"line_start":18,"line_end":18,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/ecb.rs","byte_start":17382,"byte_end":17385,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":159},{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/ofb.rs","byte_start":19529,"byte_end":19532,"line_start":18,"line_end":18,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/pcbc.rs","byte_start":20636,"byte_end":20640,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/pcbc.rs","byte_start":20932,"byte_end":20936,"line_start":33,"line_end":33,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/errors.rs","byte_start":3473,"byte_end":3487,"line_start":13,"line_end":13,"column_start":23,"column_end":37},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":220},"to":{"krate":1,"index":6320}},{"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/errors.rs","byte_start":3657,"byte_end":3671,"line_start":20,"line_end":20,"column_start":23,"column_end":37},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":220},"to":{"krate":5,"index":1690}},{"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/errors.rs","byte_start":3768,"byte_end":3786,"line_start":26,"line_end":26,"column_start":23,"column_end":41},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":227},"to":{"krate":1,"index":6320}},{"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/errors.rs","byte_start":3960,"byte_end":3978,"line_start":33,"line_end":33,"column_start":23,"column_end":41},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":227},"to":{"krate":5,"index":1690}},{"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/traits.rs","byte_start":4510,"byte_end":4515,"line_start":13,"line_end":13,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":1,"index":1976},"to":{"krate":0,"index":33}},{"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/cbc.rs","byte_start":9766,"byte_end":9769,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/cbc.rs","byte_start":10224,"byte_end":10227,"line_start":37,"line_end":37,"column_start":32,"column_end":35},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":234},"to":{"krate":0,"index":33}},{"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/cfb.rs","byte_start":12291,"byte_end":12294,"line_start":20,"line_end":20,"column_start":32,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":244},"to":{"krate":0,"index":33}},{"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/cfb8.rs","byte_start":15412,"byte_end":15416,"line_start":18,"line_end":18,"column_start":32,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":254},"to":{"krate":0,"index":33}},{"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/ecb.rs","byte_start":17382,"byte_end":17385,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":264},"to":{"krate":0,"index":33}},{"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/ofb.rs","byte_start":19529,"byte_end":19532,"line_start":18,"line_end":18,"column_start":32,"column_end":35},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":273},"to":{"krate":0,"index":33}},{"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/pcbc.rs","byte_start":20636,"byte_end":20640,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/arctumn/.cargo/registry/src/github.com-1ecc6299db9ec823/block-modes-0.7.0/src/pcbc.rs","byte_start":20932,"byte_end":20936,"line_start":33,"line_end":33,"column_start":32,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":283},"to":{"krate":0,"index":33}}]}